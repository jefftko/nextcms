import MediaManager from '@/components/admin/media/media-manager'
import MediaHeader from '@/components/admin/media/media-header'
import { FlyoutProvider } from '@/app/admin/flyout-context'
import { MediaDetailProvider } from '../media-context'
import MediaPanel from '../media-panel'
import  MediaProvider from '@/app/admin/media-provider'
import { handleLocalFiles } from '@/libs/fileHandler'


export default async function Page({ params }: { params: { slug: string[] } }) {
  //flyoutOpen: boolean
  const slug = decodeURI(params.slug.join('/'))
  // Filter out drafts in production
  let post: Pages
  if (params.slug[0] === 'edit' && params.slug[1]) {
    // @ts-ignore - Disable TypeScript check for the next line
    const sortedCoreContents = allCoreContent(sortPosts(allPages))
    post = allPages.find((p) => p.slug === params.slug[1]) as Pages
    if (!post) {
      return notFound()
    }
    const mainContent = coreContent(post)
  } else if (params.slug[0] === 'create' && !params.slug[1]) {
    post = {
      title: 'New Page',
      pagePath: '',
      status: 'unpublished',
      isDefault: false,
      blocks: [],
    } as Pages
    //const slug = decodeURI(params.slug.join('/'))
    //post = allPages.find((p) => p.slug === slug) as Page
  } else {
    return notFound()
  }

  return (
    <FlyoutProvider initialState={true}>
      <PageDataProvider data={post} action={params.slug[0]}>
        <BlockDataProvider>
          <EditorContent />
        </BlockDataProvider>
      </PageDataProvider>
    </FlyoutProvider>
  )
}
